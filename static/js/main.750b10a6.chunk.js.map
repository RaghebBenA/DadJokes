{"version":3,"sources":["joke/joke.js","jokeList/jokeList.js","App.js","index.js"],"names":["Joke","text","votes","upvote","downvote","compare","x","v","getobj","obj","color","emoji","className","onClick","style","borderColor","JokeList","useState","JSON","parse","window","localStorage","getItem","jokesData","setJokes","loading","setLoading","PrevJokes","Set","map","j","fetchData","useCallback","a","jokes","length","Axios","get","headers","Accept","res","has","data","joke","push","id","uuid","setItem","stringify","alert","useEffect","HandleVote","delta","sorted","sort","b","alt","src","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.750b10a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./jokes.scss\";\r\n\r\nconst Joke = ({ text, votes, upvote, downvote }) => {\r\n  const compare = (x, v) => {\r\n    if (v >= x) {\r\n      return v;\r\n    }\r\n  };\r\n\r\n  const getobj = () => {\r\n    let obj;\r\n    switch (votes) {\r\n      case compare(15, votes):\r\n        obj = {\r\n          color: \"#4CAF50\",\r\n          emoji: \"em em-rolling_on_the_floor_laughing\"\r\n        };\r\n        break;\r\n      case compare(12, votes):\r\n        obj = { color: \"#8BC34A\", emoji: \"em em-laughing\" };\r\n        break;\r\n      case compare(9, votes):\r\n        obj = { color: \"#CDDC39\", emoji: \"em em-smiley\" };\r\n        break;\r\n      case compare(6, votes):\r\n        obj = { color: \"#FFEB3B\", emoji: \"em em-slightly_smiling_face\" };\r\n        break;\r\n      case compare(3, votes):\r\n        obj = { color: \"#FFC107\", emoji: \"em em-neutral_face\" };\r\n        break;\r\n      case compare(0, votes):\r\n        obj = { color: \"#FF9800\", emoji: \"em em-confused\" };\r\n        break;\r\n      default:\r\n        obj = { color: \"#f44336\", emoji: \"em em-angry\" };\r\n    }\r\n    return obj;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Joke\">\r\n      <div className=\"Joke-buttons\">\r\n        <i className=\"fas fa-arrow-up\" onClick={upvote} />\r\n        <span className=\"Joke-votes\" style={{ borderColor: getobj().color }}>\r\n          {votes}\r\n        </span>\r\n        <i className=\"fas fa-arrow-down\" onClick={downvote} />\r\n      </div>\r\n      <div className=\"Joke-text\">{text}</div>\r\n      <div className=\"Joke-smiley\">\r\n        <i className={getobj().emoji} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Joke;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./jokeList.scss\";\r\nimport uuid from \"uuid\";\r\nimport Joke from \"../joke/joke\";\r\nimport AnimateReorder  from 'react-animate-reorder'\r\n\r\nconst JokeList = () => {\r\n  const [jokesData, setJokes] = useState(\r\n    JSON.parse(window.localStorage.getItem(\"jokes\") || \"[]\")\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  let PrevJokes = new Set(jokesData.map((j) => j.text));\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      let jokes = [];\r\n      setLoading(true);\r\n      while (jokes.length < 10) {\r\n        let res = await Axios.get(\"https://icanhazdadjoke.com/\", {\r\n          headers: { Accept: \"application/json\" }\r\n        });\r\n        if (!PrevJokes.has(res.data.joke)) {\r\n          jokes.push({ id: uuid(), text: res.data.joke, votes: 0 });\r\n        }\r\n      }\r\n      setJokes((jokesData) => [...jokesData, ...jokes]);\r\n      setLoading(false);\r\n      window.localStorage.setItem(\"jokes\", JSON.stringify(jokes));\r\n    } catch (err) {\r\n      alert(err);\r\n      setLoading(false);\r\n    }\r\n  }, [PrevJokes]);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"jokes\", JSON.stringify(jokesData));\r\n    if (jokesData.length === 0) {\r\n      fetchData();\r\n    }\r\n      \r\n  \r\n\r\n  }, [fetchData, jokesData]);\r\n\r\n  const HandleVote = (id, delta) => {\r\n    setJokes((jokesData) =>\r\n      jokesData.map((j) => (j.id === id ? { ...j, votes: j.votes + delta } : j))\r\n    );\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setLoading(true);\r\n    fetchData();\r\n  };\r\n\r\n  let sorted = jokesData.sort((a,b)=>b.votes - a.votes)\r\n  if (loading) {\r\n    return (\r\n      <div className=\"spinner-Loading\">\r\n        <i className=\"far fa-8x fa-laugh fa-spin\" />\r\n        <h1>...Loading</h1>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"JokeList\">\r\n      <div className=\"JokeList-sidebar\">\r\n        <h1>\r\n          <span>Dad</span> Jokes\r\n        </h1>\r\n\r\n        <img\r\n          alt=\"emoji\"\r\n          src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\"\r\n        />\r\n        <button onClick={handleClick}>New Jokes</button>\r\n      </div>\r\n      <div className=\"JokeList-jokes\">\r\n      <AnimateReorder >\r\n        {sorted.map(({ text, votes, id }) => (\r\n          <Joke\r\n            key={id}\r\n            text={text}\r\n            votes={votes}\r\n            upvote={() => HandleVote(id, 1)}\r\n            downvote={() => HandleVote(id, -1)}\r\n          />\r\n        ))}\r\n      </AnimateReorder>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JokeList;\r\n","import React from 'react';\nimport './App.css';\nimport JokeList from './jokeList/jokeList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <JokeList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}